<!DOCTYPE html lang="en-UK">
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Traffic accidents demo</title>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<script src="http://code.jquery.com/jquery-1.8.0.min.js"></script>

		<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.css" />
		<!--[if lte IE 8]>
		    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.ie.css" />
		<![endif]-->
		<style type="text/css" media="screen">
			body{
				margin: 0;
				padding: 0;
			}

			#map {
				width: 100%;
				height: 100%;
			}
		</style>
		<script src="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet-src.js"></script>
		<script type="text/javascript" src="heatmap.js"></script>
		<script type="text/javascript" src="heatmap-leaflet.js"></script>
		<script type="text/javascript" src="QuadTree.js"></script>

		<script type="text/javascript" charset="utf-8">
			$(function() {

				var baseLayer = L.tileLayer(
					'http://{s}.tile.cloudmade.com/ad132e106cd246ec961bbdfbe0228fe8/997/256/{z}/{x}/{y}.png',{
						attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>',
						maxZoom: 18
					}
				);

				var heatmapLayer = L.TileLayer.heatMap({
					// radius could be absolute or relative
					// absolute: radius in meters, relative: radius in pixels
					//radius: { value: 200, absolute: true },
			        radius: { value: 10, absolute: false },
					opacity: 0.8,
					gradient: {
						0.45: "rgb(0,0,255)",
						0.55: "rgb(0,255,255)",
						0.65: "rgb(0,255,0)",
						0.95: "yellow",
						1.0: "rgb(255,0,0)"
					}
				});

				var hiddenInput = document.getElementById("hiddenInputBox");
				hiddenInput.onchange =  function() {
					var dd = JSON.parse(hiddenInput.value);
					//console.log(dd);
					heatmapLayer.setData(dd.data);
					//heatmapLayer._reset();
					//heatmapLayer._update();
				};

				//heatmapLayer.setData(JSON.parse(hiddenInput.value).data);

				var map = new L.Map('map', {
					center: new L.LatLng(1.35, 103.82),
					zoom: 12,
					layers: [baseLayer, heatmapLayer]
				});

				// make accessible for debugging
				layer = heatmapLayer;



				}
			)
			
		</script>
	</head>
	<body>
		<div id="map"></div>
		<input id="hiddenInputBox" type="hidden" />
	</body>

</html>